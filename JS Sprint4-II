
/// DOCUMENT OBJECT MODEL  ///

<!-- index.html -->

<main id="container">
    <div class="content">
        <div class="content__item"></div>
        <div class="content__item"></div>
        <div class="content__item"></div>
    </div>
</main>

/* script.js */

let container = document.querySelector("#container");
let content = container.querySelector(".content");
let contentItem = content.querySelector(".content__item");

console.log(contentItem); // Will log: <div class="content__item"></div>

let contentItems = content.querySelectorAll(".content__item");

console.log(contentItems); /* Will log all elements with the .content__item class */

//// old usage \\\
getElementByID() // getElementsByClassName() // getElementsByTagName() - old ones////
// Searching for an element by its ID using querySelector
let container1 = document.querySelector("#container");

// Searching for an element by its ID using getElementById
let container2 = document.getElementById("container");

// Checking whether these elements are identical to each other
console.log(container1 === container2); // true - these elements are identical
////____\\\\



/// ATTRIBUTES \\\ 
 getAttribute()  // Retrieve an attribute's value
 hasAttribute() //Check if an element has a certain attribute 
 setAttribute() // Set the value of an attribute  
 removeAttribute() // Remove an attribute  

////
<button id="big-red-button" onclick="alert('KABOOM!');" disabled>
    A big red button
</button>

// search the button by ID and store it in the bigAndRed variable
let bigAndRed = document.querySelector("#big-red-button");

// inspecting the button element via the getAttribute() method
bigAndRed.getAttribute("lang"); // null
bigAndRed.getAttribute("a non-existent attribute"); // null
bigAndRed.getAttribute("disabled"); // ''

// checking for attributes
bigAndRed.hasAttribute("onclick"); // true
bigAndRed.hasAttribute("a non-existent attribute"); // false
bigAndRed.hasAttribute("disabled"); // true

//set attribute
bigAndRed.setAttribute("lang", "en");
сonsole.log(bigAndRed.hasAttribute("lang")); //true

disabledCheckbox.setAttribute("disabled", true); // Deactivating the checkbox.  ( disabled'tan sonra 2. parametre olmak zorunda  , true, false veya " bir metin ")

//Changing style of the html elements:
someElement.setAttribute("style", "background-color: #000000");

// remove attibute
bigAndRed.hasAttribute("disabled"); // true
bigAndRed.removeAttribute("disabled"); // removes the attribute from the element
bigAndRed.hasAttribute("disabled"); // false

// Built-in Properties
<!-- index.html -->
<div id="owl">Owl</div> <!-- this is an element -->
/* script.js */
let owl = document.querySelector("#owl"); // this is an object :: While an element becomes an object, its attributes turn into properties.


/// CSS Attributes
<!-- The manufacturers of Her Majesty's Cars are written in the class names -->
<div class="bentley rolls-royce">The Royal Garage</div>

/* Let's get a list of Her Majesty's Cars by searching
for the corresponding element via the .bentley selector */

let garage = document.querySelector(".bentley");    // template literal
console.log(`Her Majesty's Garage: ${garage.classList}`); // Her Majesty's Garage: bentley rolls-royce

///// contains()
let garage = document.querySelector(".bentley");

garage.classList.contains("bentley"); // true — Her Majesty has a Bentley 
garage.classList.contains("jaguar"); // false — Her Majesty does not have a Jaguar

///// add()
// a Jaguar has been delivered to The Royal Garage 
garage.classList.add("jaguar");

console.log(`Her Majesty's Garage: ${garage.classList}`); // bentley rolls-royce jaguar

/// remove()

garage.classList.remove("jaguar"); // Her Majesty has grown tired of the Jaguar

console.log(`Her Majesty's Garage: ${garage.classList}`); // bentley rolls-royce

/// toggle()
// If there's a Jaguar, we must dispose of it   (if there is not a Jaguar it will add)
garage.classList.toggle("jaguar");

console.log(`Her Majesty's Garage: ${garage.classList}`); // bentley rolls-royce


///innetHTML textContent
***BACK TICK ile birkaç satır kod konulanibiliyor ''  yerine ``
document.body.innerHTML = "<div>Let's add some HTML</div>"; // Now the page has this div element and nothing else. If there's some other code in the document before using this property, this new code will replace it.
document.body.innerHTML = ""; // you can delete the whole content of an element by changing the value of this property to an empty string


///textContent  - suggested only for elements without children - only with text!!!
<p id="paragraph">This is the text inside the element.</p>

let paragraph = document.getElementById("paragraph");   /document.queryselector("paragraph"); 
console.log(paragraph.textContent); // "This is the text inside the element."
paragraph.textContent = "And this is the new text."; // you can change the text content like this

innerText - ignores hidden texts and just changes the one it sees, 
<p id="paragraph">
    This is the text inside the element.
    <span style="display: none;">This text is invisible.</span>
</p>
let paragraph = document.getElementById("paragraph");

console.log(paragraph.innerText); // This is the text inside the element.
console.log(paragraph.textContent);
/* This is the text inside the element.
This text is invisible. */

/// EVENT LISTENER
element.addEventListener(eventName, handler);  //eventName = click, mouseover, mouseout, scroll    handler =  function that will be called for the event

//Sample//
let element = document.querySelector(".my-element");

function showClick() {
    console.log("You have clicked on the element");
}

element.addEventListener("click", showClick);

// Sample : if we are going to use the function only one time, we can code function in EventListener.
let element = document.querySelector(".my-element");

element.addEventListener("click", function () {
    console.log("You have clicked on the element");
});

 
 ///insertAdjacementHTML & insertAdhacementText
 
 zoo.insertAdjacentHTML('beforeend', '<div class="tiger"></div>'); 
 "beforeend"
 "beforebegin"
 "afterbegin"
 "afterend"
 
let elephant = document.querySelector(".elephant");

// Set a value for its name property, and print it to the console
elephant.name = "Dumbo";
console.log(elephant.name); // Dumbo

// Find the "zoo" element via .querySelector
let zoo = document.querySelector(".zoo");

zoo.insertAdjacentHTML("beforeend", "<div class='tiger'></div>");

// Find the "elephant" element once more and print its name to the console
elephant = document.querySelector(".elephant");
console.log(elephant.name); // Dumbo
